= README
== doodle

Version 0.1.0

*doodle* is my attempt at a metaprogramming framework that tries not to
have to inject methods into core Ruby objects such as Object, Class
and Module.

While doodle itself is useful for defining classes, my main goal is to
come up with a useful DSL notation for class definitions which can be
reused in many contexts.

Note that this is very much the first version of a
work-in-progress. Despite a fair number of specifications, you can
expect there to be bugs and unexpected behaviours.

Full docs at http://doodle.rubyforge.org

== Examples
=== Simple example

  :include: examples/example-01.rdoc

=== More complex example

  :include: examples/example-02.rdoc

== Known bugs

* Not compatible with ruby 1.9

== To do

* Better documentation
* Make compatible with ruby 1.9
* Add examples showing other uses of DSL aspect
* More specs

== Similar and related libraries

* traits[http://www.codeforpeople.com/lib/ruby/traits/]
* attributes[http://www.codeforpeople.com/lib/ruby/attributes/]

== Thanks

*doodle* was developed using
BDD[http://en.wikipedia.org/wiki/Behavior_driven_development] with
RSpec[http://rspec.rubyforge.org/], autotest (part of the
ZenTest[http://www.zenspider.com/ZSS/Products/ZenTest/] suite) and
rcov[http://eigenclass.org/hiki.rb?rcov] - fantastic tools.

