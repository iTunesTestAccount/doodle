= ChangeLog for doodle

== 0.0.8 / 2008-03-25

- renamed rake task upload_gem to publish_gem
- bumped version and updated todo list
- don't define factory method if one by same name already defined
- apply validation! to raw instance variables - also, raise Doodle::ValidationError rather than ArgumentError if missing required values
- tweaked bugs_spec
- added spec to cover applying conversions to yaml loaded data

== 0.0.7 / 2008-03-22

- return self from validate! (so you can use idiom foo = YAML::load(yaml).validate!)

- fix normalization of keys to symbols in initialize_from_hash

- fix error not allowing nils in :init clause (because can't clone nil)

- allow more than one class in from clause (e.g. from String, Symbol do ... end)

- removed :meta as alias for :singleton_class (conflicts with openuri, facets, etc.)

== 0.0.6 / 2008-03-16

- fixed Rakefile error (wasn't including examples in rdoc)

== 0.0.5 / 2008-03-16

- added collector_spec

- tidied up validation specs

- fixed dumb bug where validations were getting duplicated resulting from using push on the source array. D'oh! 

- added Doodle::DoodleInfo.raise_exception_on_error - set to false to have errors collected only
  without raising an exception (which is the default behaviour)
  - errors - returns array of error information
  - clear_errors - clears errors array
  - this is still a bit rough - work in progress

- fixed problem with init borking when given non-cloneable object (e.g. Fixnum)

- added serialize_spec

- validate! now validates all attributes too by default (no need to use validate!(true) any more)

== 2008-03-15  Sean O'Halpin  <ohalps01@MC-S001853.local>

- added option (all=true|false) to validate! if true, will
  validate all attributes as well as invoking object level validation

- made validate! public

== 2008-03-12  seano  <sean.ohalpin@gmail.com>

- added init_spec

- tweaked Rakefile (don't run profile by default, fix dcov task)

- allow :collect => :name form for collecting raw
  objects (i.e. don't do a klass.new(*args) on values)

- use snake_case (from facets) when generating name from class for
  collect

