== 0.1.8 / 2008-05-13
- Features:
  - now applies instance level conversions (class level #from) to
    attribute values, e.g.

      class Name < String
        include Doodle::Core
        from String do |s|
          Name.new(s)
        end
      end

      class Person < Doodle
        has Name
      end

      person = Person 'Arthur'

  - better error reporting

- Bug fixes:
  - #has with class param was not enforcing :kind constraint
  - moved more methods into DoodleInfo. You should now access metadata
    via:
    - obj.doodle.attributes
    - obj.doodle.conversions
    - obj.doodle.validations
    - obj.doodle.parent
    - obj.doodle.class_attributes

== 0.1.7 / 2008-05-10
- Features
  - #has now accepts class constant in name position and generates name
    and kind from that, e.g.
      has Person --> has :person, :kind => Person
      has AudioClip --> has :audio_clip, :kind => AudioClip
  - moved datatypes code into main doodle.rb
  - use doodle.parent instead of doodle_parent

- Bug fixes:
  - fixed handling of :init blocks so they can refer to user supplied
    attribute values which don't have defaults
    - note: attributes referred to in :init blocks ~must~ be supplied as
      keyword arguments - by the time evaluation gets to the
      initialization block, the :init block has already been evaluated
      so will raise an error if it cannot find the value it's looking for
  - moved more methods into DoodleInfo from Core

== 0.1.6 / 2008-05-08
- Features:
  - short cut syntax for #must - can now specify constraints like
    this:
      must "size > 0"
      must "self =~ /[A-Z]"
    which will be evaluated as if you had written this:
      must "self =~ /[A-Z]" do |v|
        v.instance_eval("self =~ /[A-Z]")
      end
  - prefixed more public but undocumented methods with 'doodle_' to avoid clashing with
    common names (e.g. parents, attributes, validations, etc.)
  - renamed Doodle::Attribute Doodle::DoodleAttribute for same reason
  - updated specs to reflect name changes
  - attribute level validation messages now denote containing class
  - major refactoring of #has method - collections now handled by
    specialized attribute collector classes

- Bug fixes:
  - can now load keyed collection from hash

== 0.1.5 / 2008-05-06
- Bug fixes:
  - fixed bug where defaults were preventing validation working when loading from 
    YAML and added spec

== 0.1.4 / 2008-05-06
- Features:
  - keyed collections - see http://doodle.rubyforge.org/#keyed_collections for details
  - specialized Attribute classes in #has - see
    spec/specialized_attribute_class_spec.rb for example

- Bug fixes:
  - fixed bug when using a collect generated method with a type but no arguments

== 0.1.3 / 2008-05-01
- really avoid wierd interaction with ActiveRecord this time
- also, managed to get rid of crufty reliance on inspect and found
  a tidy way to determine singletons :)

== 0.1.2 / 2008-05-01
- avoid wierd interaction with ActiveRecord (where calling inspect on a
  class hits the database). Thanks again to Ryan Garver.

== 0.1.1 / 2008-04-28
- changed name of #parent to #doodle_parent to avoid clash with
  ActiveSupport (thanks to Ryan Garver for reporting this)

== 0.1.0 / 2008-04-26
- doodle's first beta version - the API should remain stable from now on
- created a Google group: http://groups.google.com/group/ruby-doodle
- major change: changed Doodle from module to class so you now use
    class Foo < Doodle
  instead of 
    class Foo < Doodle::Base
- Doodle::Helper renamed Doodle::Core
- added #parent method - returns outer object in initialization blocks
  (see spec/doodle_context_spec for example usage)
- fixed class and singleton attribute inheritance
- rake spec now passes all specs with ruby 1.8.6, ruby 1.9.0 and JRuby 1.1.1
- added more specs
- added lib/doodle/utils.rb (used by examples)
- removed (half-hearted) support for 1.8.5
- removed redundant methods & excised some cruft
- refactored project to use newgem

== 0.0.11 / 2008-04-13
- refactored attributes and conversions

== 0.0.10 / 2008-04-13
- fixed bug with setting class and singleton attributes & added spec

== 0.0.9 / 2008-04-12

- new features:
  - added Doodle.context and Doodle.parent (only valid during
    initialization)
  - use SaveBlock to distinguish between Proc and block args to :init
  - :collect now creates array by default if no :init specified (thanks to
    James Adam :)
  - :collect can now initialize from Enumerables by default
  - raise UnknownAttributeError if initialize called with unspecified attribute key
- new examples:
  - mail example (with gmail smtp support)
  - Doodle.parent
  - datatypes
- new specs for singletons, Doodle.context and Doodle.parent, factory
- updated docs
- removed unused code and tidied up
- bug fixes:
  - fixed memory leak and provided custom to_yaml and marshal_dump/load
  - fixed regex for factory methods
  - fixed bug where validate! was creating instance variables with defaults
  - fixed errors collection
  - fixed yaml test for JRuby
  - don't define factory method if one by same name already defined

== 0.0.8 / 2008-03-25

- renamed rake task upload_gem to publish_gem
- bumped version and updated todo list
- don't define factory method if one by same name already defined
- apply validation! to raw instance variables - also, raise Doodle::ValidationError rather than ArgumentError if missing required values
- tweaked bugs_spec
- added spec to cover applying conversions to yaml loaded data

== 0.0.7 / 2008-03-22

- return self from validate! (so you can use idiom foo = YAML::load(yaml).validate!)

- fix normalization of keys to symbols in initialize_from_hash

- fix error not allowing nils in :init clause (because can't clone nil)

- allow more than one class in from clause (e.g. from String, Symbol do ... end)

- removed :meta as alias for :singleton_class (conflicts with openuri, facets, etc.)

== 0.0.6 / 2008-03-16

- fixed Rakefile error (wasn't including examples in rdoc)

== 0.0.5 / 2008-03-16

- added collector_spec

- tidied up validation specs

- fixed dumb bug where validations were getting duplicated resulting from using push on the source array. D'oh! 

- added Doodle::DoodleInfo.raise_exception_on_error - set to false to have errors collected only
  without raising an exception (which is the default behaviour)
  - errors - returns array of error information
  - clear_errors - clears errors array
  - this is still a bit rough - work in progress

- fixed problem with init borking when given non-cloneable object (e.g. Fixnum)

- added serialize_spec

- validate! now validates all attributes too by default (no need to use validate!(true) any more)

== 2008-03-15  Sean O'Halpin  <ohalps01@MC-S001853.local>

- added option (all=true|false) to validate! if true, will
  validate all attributes as well as invoking object level validation

- made validate! public

== 2008-03-12  seano  <sean.ohalpin@gmail.com>

- added init_spec

- tweaked Rakefile (don't run profile by default, fix dcov task)

- allow :collect => :name form for collecting raw
  objects (i.e. don't do a klass.new(*args) on values)

- use snake_case (from facets) when generating name from class for
  collect

