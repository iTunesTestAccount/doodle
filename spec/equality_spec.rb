require File.dirname(__FILE__) + '/spec_helper.rb'

describe Doodle, 'simple equality' do
  temporary_constants :Foo, :Bar, :Baz do
    before(:each) do
      class Bar < Doodle
        has :name
      end
      class Foo < Doodle
        has :id
        has Bar
      end
      class Baz < Doodle
        has :id
        has Bar
      end
      @foo1 = Foo.new do
        id 1
        bar "Hello"
      end
      @foo2 = Foo.new do
        id 1
        bar "Hello"
      end
      @baz = Baz.new do
        id 1
        bar "Hello"
      end
    end

    it 'should be equal to another Doodle with the same class and values' do
      @foo1.should_be @foo2
    end

    it 'should not equal another Doodle with the same values but different class' do
      @foo1.should_not_be @baz
    end
  end
end

describe Doodle, 'nested equality via inheritance' do
  temporary_constants :Location, :Event do
    before :each do 
      class ::Location < Doodle
        has :name, :kind => String
        has :events, :collect => :Event, :key => :name
      end

      class ::Event < Doodle
        has :name, :kind => String
        has :date, :kind => Date do
          default { Date.today }
          from String do |s|
            Date.parse(s)
          end
        end
        has :locations, :collect => {:place => :Location}, :key => :name
      end  

      @event = Event "Festival" do
        date '2018-04-01'
        place "The muddy field"
        place "Beer tent" do
          event "Drinking"
          event "Dancing"
        end
      end
    end

    it 'should equate object A and object B where object B has been deserialized from yaml generated by serializing object A' do
      yaml = @event.to_yaml
      event2 = YAML::load(yaml).validate!
      @event.to_hash.should_be event2.to_hash
      @event.should_be event2
    end
  end
end

describe Doodle, 'nested equality via including Doodle::Core' do
  temporary_constants :Location, :Event do
    before :each do 
      class ::Location < Doodle
        has :name, :kind => String
        has :events, :collect => :Event, :key => :name
      end

      class ::Event
        # or if you want to inherit from another class
        include Doodle::Core

        has :name, :kind => String
        has :date, :kind => Date do
          default { Date.today }
          from String do |s|
            Date.parse(s)
          end
        end
        has :locations, :collect => {:place => :Location}, :key => :name
      end  

      @event = Event "Festival" do
        date '2018-04-01'
        place "The muddy field"
        place "Beer tent" do
          event "Drinking"
          event "Dancing"
        end
      end
    end

    it 'should equate object A and object B where object B has been deserialized from yaml generated by serializing object A' do
      yaml = @event.to_yaml
      event2 = YAML::load(yaml).validate!
      @event.to_hash.should_be event2.to_hash
      @event.should_be event2
    end
  end
end
